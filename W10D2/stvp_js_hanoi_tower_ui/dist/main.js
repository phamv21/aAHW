(()=>{var t={417:t=>{t.exports=class{constructor(){this.towers=[[3,2,1],[],[]]}isValidMove(t,e){const s=this.towers[t],n=this.towers[e];return 0!==s.length&&(0==n.length||s[s.length-1]<n[n.length-1])}isWon(){return 3==this.towers[2].length||3==this.towers[1].length}move(t,e){return!!this.isValidMove(t,e)&&(this.towers[e].push(this.towers[t].pop()),!0)}print(){console.log(JSON.stringify(this.towers))}promptMove(t,e){this.print(),t.question("Enter a starting tower: ",(s=>{const n=parseInt(s);t.question("Enter an ending tower: ",(t=>{const s=parseInt(t);e(n,s)}))}))}run(t,e){this.promptMove(t,((s,n)=>{this.move(s,n)||console.log("Invalid move!"),this.isWon()?(this.print(),console.log("You win!"),e()):this.run(t,e)}))}}},897:(t,e,s)=>{s(417),t.exports=class{constructor(t,e){this.game=t,this.$el=e,this.renderTower(),this.bindEvent()}renderTower(){let t=this.game.towers;this.$el.find("ul").remove();for(let e=0;e<3;e++){const s=$("<ul>").attr("data-towerid",e);for(let n=2;n>=0;n--){const o=$("<li>");null!=t[e][n]&&o.addClass(`num-${t[e][n]}`),s.append(o)}this.$el.append(s)}}bindEvent(){let t=this.handleEvent();this.$el.on("click","ul",(e=>{const s=$(e.currentTarget),n=s.data("towerid");s.addClass("selected"),t=t(parseInt(n))}))}handleEvent(){let t=[],e=this;return function s(n){return void 0!==n&&t.push(n),2===t.length&&(e.triggleEvent(t[0],t[1]),console.log(t),t=[]),s}()}triggleEvent(t,e){if(this.game.isValidMove(t,e)){if(this.game.move(t,e),this.renderTower(),this.game.isWon()){const t=$("<h3>Congratulation, you have won!</h3>");this.$el.append(t),this.$el.off("click")}}else alert("invalid Move!"),this.renderTower()}}}},e={};function s(n){var o=e[n];if(void 0!==o)return o.exports;var r=e[n]={exports:{}};return t[n](r,r.exports,s),r.exports}(()=>{const t=s(417),e=s(897);$((()=>{const s=$(".hanoi"),n=new t;new e(n,s)}))})()})();