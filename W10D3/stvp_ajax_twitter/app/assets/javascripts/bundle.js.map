{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,yBAAyB,MAAM;AAC/B;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;;AAIA;;AAEA;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;;;;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,4CAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,4BAA4B;AAC5B,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;AC/DA,gBAAgB,mBAAO,CAAC,4CAAa;;;AAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc,KAAK,oBAAoB;AAClF,+BAA+B,eAAe;AAC9C;AACA;AACA,wCAAwC,WAAW,KAAK,iBAAiB;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC;AAClC,qCAAqC;AACrC,OAAO;AACP;;AAEA;;;;AAIA;;AAEA;;;;;;;;;;ACnEA,gBAAgB,mBAAO,CAAC,4CAAa;;;AAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ,IAAI,cAAc;AACzE;AACA,SAAS;;AAET;AACA;AACA;AACA;;;AAGA;;;;AAIA;;AAEA;;;;;;;;;;ACnGA,gBAAgB,mBAAO,CAAC,4CAAa;AACrC,qBAAqB,mBAAO,CAAC,oDAAiB;;;AAG9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,MAAM,IAAI,aAAa;AACtE;AACA;AACA;AACA,wCAAwC,yCAAyC;AACjF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;;AAGA;;;;;;UC1CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,mBAAmB,mBAAO,CAAC,uDAAoB;AAC/C,mBAAmB,mBAAO,CAAC,uDAAoB;AAC/C,gBAAgB,mBAAO,CAAC,qDAAmB;AAC3C,qBAAqB,mBAAO,CAAC,wDAAmB;AAChD,iBAAiB,mBAAO,CAAC,mDAAkB;;AAE3C;;AAEA;AACA,4BAA4B;AAC5B,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,CAAC,E","sources":["./frontend/api_until.js","./frontend/data_tweets.js","./frontend/follow_toggle.js","./frontend/infinite_tweets.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const APIUtil ={\n    followUser: id => {\n        return $.ajax({\n        type: 'POST',\n        url: `/users/${id}/follow`,\n        dataType: 'json',\n        });        \n    },\n\n    unfollowUser: id=>{\n        return $.ajax({\n        type: 'DELETE',\n        url: `/users/${id}/follow`,\n        dataType: 'json',\n    });   \n},\n    searchUsers: queryVal=>{\n        return $.ajax({\n            type: 'GET',\n            url: `/users/search?query=${queryVal}`,\n            dataType: 'json',\n        });\n    \n    },\n\n    composeTweet: formData=>{\n        return $.ajax({\n            type: 'POST',\n            url: '/tweets',\n            data: formData,\n            dataType: 'json',\n        });\n    },\n\n    fetchTweets: (maxCreatedAt,limit=0)=>{\n        let url='/feed';\n        url += `?limit=${limit}`;\n        if(maxCreatedAt){\n            url += `&max_created_at=${maxCreatedAt}`\n        }\n        \n        \n        return $.ajax({\n            type: 'GET',\n            url: url,\n            dataType: 'json',\n        });\n    }\n\n\n\n};\n\nmodule.exports = APIUtil;","class DataTweets{\n    constructor($el){\n        this.$el = $el;\n        this.allTweets();\n    }   \n    allTweets(){\n        this.$el.on('click',(e)=>{\n            e.preventDefault();\n            let success = resp => console.log(resp) \n            $.ajax({\n                type: \"GET\",\n                url: \"/tweets\",\n                dataType: 'json'\n            }).then(success)\n        })\n    }\n}\n\nmodule.exports = DataTweets","const APIUtil = require(\"./api_until\");\n\nclass FollowToggle{\n    constructor($el,options){\n     this.$el = $el;\n     this.userId = this.$el.data('userid') || options.userId;\n     this.followState = this.$el.data('followedstate') || options.followState;\n    this.renderButton(); \n     this.handleClick();\n\n    }\n    renderButton(){\n        this.$el.empty();\n        const followState = this.followState;\n        let buttonName = ''; \n        if(followState){buttonName = 'Unfollow'};\n        if (!followState) { buttonName = 'Follow' };\n        this.$el.append(`${buttonName}`);\n    }\n    handleClick(){ \n        this.$el.on('click',e=>{\n            e.preventDefault;\n            let id = this.userId;\n            \n            const successFollow = (res) => {\n                console.log(res);\n                this.$el.attr('data-followedstate', true);\n                this.followState = true;\n                this.enable();\n                this.renderButton();\n            }\n            \n            const successUnfollow = (res) =>{\n                console.log(res);\n                this.$el.attr('data-followedstate', false);\n                this.followState = false;\n                this.enable();\n                this.renderButton();\n            }\n                        \n            this.disable();\n            if (this.followState) {\n                APIUtil.unfollowUser(id).then(successUnfollow)\n                \n            } else {   \n                APIUtil.followUser(id).then(successFollow)\n            }\n            \n\n            \n        })\n        \n    }\n    disable(){\n        this.$el.append('ing')\n        this.$el.attr('disabled',true)\n    }\n    enable(){\n        this.$el.attr('disabled', false)\n    }\n}\n\n\nmodule.exports = FollowToggle;\n\n","const APIUtil = require(\"./api_until\");\n\n\nclass InfiniteTweets{\n    constructor($el){\n        this.$el = $el;\n        this.maxCreatedAt = null;\n        this.fetchTweets();\n        this.insertTweet();\n    }\n    fetchTweets(){\n      let sucess = resp=>{  //define how to deal with the respond\n        if(resp.length > 0){\n          this.maxCreatedAt = resp[resp.length-1].created_at;        \n          this.render(resp,'bottom')\n        }else{\n          alert(\"No more tweets!!!\")\n        }\n      }\n      let failure = err=>{\n        console.log(err);\n      }\n\n      $(\".fetch-more\").on('click',(e)=>{\n        e.preventDefault();\n        APIUtil.fetchTweets(this.maxCreatedAt).then(sucess).fail(failure);  \n      })\n      //insert mode\n      $(\".fetch-more\").trigger('click');\n      \n    }\n    insertTweet(){\n      let sucess = resp => {  //define how to deal with the respond\n         this.render(resp,\"top\");\n      }\n\n      $(\".insert-tweet\").on(\"click\", (e) => {\n        e.preventDefault;\n        APIUtil.fetchTweets(null, 1).then(sucess)\n      })\n\n    }\n\n    render(resp,position){\n      resp.forEach((tweet) => {\n        let $li = $(`<li> </li>`)\n        let $author = $(`<a href='/users/${tweet.user.id}'>@${tweet.user.username}</a>`);\n        let $content = $(`<b>${tweet.content} </b>`);\n        let $mentions = $('<div><p>Mention:</p></div>');\n        tweet.mentions.forEach((el) => {\n          let $a = $(`<a href='/users/${el.user.id}'>@${el.user.username}</a>`);\n          $mentions.append($a);\n        })\n        $li.append($author);\n        $li.append($content);\n        $li.append($mentions);\n        if (position === 'top') { $('#feed').prepend($li)};\n        if (position === 'bottom') { $('#feed').append($li)};\n      })\n    }\n\n    \n\n\n\n}\n\nmodule.exports = InfiniteTweets;","const APIUtil = require(\"./api_until\");\n\n\nclass TweetCompose{\n    constructor($el){\n        this.$el = $el;\n        \n        this.$textInput = $($el.find(\"textarea\"));\n        this.submit();\n        this.charsLeft();\n        this.addMention();\n        this.removeMention();\n    }\n\n    submit(){\n        const ulId = this.$el.data(\"tweets-ul\")\n        \n        let sucess = respn =>{\n            //action \n            // let $li = $(`<li>${JSON.stringify(respn.content)} </li>`);\n            // let $ul = $(`${ulId}`);\n            // $ul.prepend($li);\n            $(\".insert-tweet\").trigger('click');\n            this.clearInput();\n            $(':input').attr('disabled', false);\n        }\n        let failure = err => {\n            console.log(`something went wrong`);\n            //action \n            this.clearInput();\n            $(':input').attr('disabled', false);\n        }\n\n\n\n        this.$el.on('submit',(e)=>{\n            e.preventDefault();\n            let formData = $(e.currentTarget).serializeJSON();\n            $(\":input\").attr('disabled',true);\n            APIUtil.composeTweet(formData).then(sucess).fail(failure);\n        })\n    }\n\n    addMention(){\n        $(\".add-mention-users\").on('click',(e)=>{\n            e.preventDefault();\n            this.newUserSelect();\n            \n        })\n    }\n    removeMention(){\n        $(\".mention-users\").on('click','.remove-mention-users',(e)=>{\n            e.preventDefault();\n            let $button = $(e.currentTarget);\n            // $button.preventDefault();\n            $button.parent().remove();\n        })\n    }\n\n\n    charsLeft(){\n        this.$el.on(\"input\",(e)=>{\n            let num = this.$textInput.val().length;\n            let remain = 140 - num;\n            $(\".chars-left\").empty();\n            $(\".chars-left\").append(`${remain} character left`);\n        })\n    }\n\n    clearInput(){\n        //this way we convert Jquery to JS, to use the reset function.\n        $(\".chars-left\").empty();\n        $(\".remove-mention-users\").parent().remove();\n        this.$el[0].reset();\n    }\n\n    newUserSelect(){\n\n        let users = window.users;\n        let $div = $(`<div></div>`);\n        let $select = $(`<select name='tweet[mentioned_user_ids][]'>\n      <option></option></select>`)\n        users.forEach((user)=>{\n            let $option = $(`<option value ='${user.id}'>${user.username}</option>`);\n            $select.append($option);\n        })\n\n        let $removeButton = $(`<button class='remove-mention-users'> Remove</button>`)\n        $div.append($select);\n        $div.append($removeButton);\n        $(\".mention-users\").append($div);\n\n\n    }\n\n\n\n}\n\nmodule.exports = TweetCompose;","const APIUtil = require(\"./api_until\");\nconst FollowToggle = require(\"./follow_toggle\");\n\n\nclass UserSeach{\n    constructor($el,$input){\n        this.$el = $el;\n        this.$input  = $input;\n        this.$ul = this.$el.find('.users');\n        this.queryVal = \"\";\n        this.handleInput();\n    }\n    handleInput(){\n        this.$input.on(\"input\",(e)=>{\n            let query = this.$input.val();\n            //suceess function.\n            let success = res => {\n                this.renderResults(res)\n            }\n\n            APIUtil.searchUsers(query).then(success)\n        })\n    }\n    renderResults(res){\n        this.$ul.empty();\n        res.forEach((el)=>{\n            let $li = $(`<li><a href='/users/${el.id}'>${el.username} </a></li>`)\n            //users/id\n            // a href =\n            let $button = $(`<button class='follow-toggle'></button>`)\n            new FollowToggle($button, { userId: el.id, followState: el.followed })\n            $li.append($button);\n            this.$ul.append($li);\n            \n        })\n        \n        \n    }\n\n}\n\n\nmodule.exports = UserSeach;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var FollowToggle = require('./follow_toggle.js');\nvar TweetCompose = require('./tweet_compose.js');\nvar UserSeach = require('./users_search.js');\nvar InfiniteTweets = require('./infinite_tweets');\nvar DataTweets = require('./data_tweets.js');\n\n$(()=>{\n\n$(\".follow-toggle\").each((i,v)=>{\n    new FollowToggle($(v),{});\n})\nvar $userSearch = $(\".users-search\");\nvar $input = $(\"#users-input\")\nnew UserSeach($userSearch,$input);\n\nvar $tweetForm = $(\".tweet-compose\");\nnew TweetCompose($tweetForm);\n\nvar $infiniteTweets = $(\".infinite-tweets\");\nnew InfiniteTweets($infiniteTweets);\n///user search\n\n//test data tweet\nvar $tweetsIndex = $(\".tweets-index-test\");\nnew DataTweets($tweetsIndex);\n\n});"],"names":[],"sourceRoot":""}